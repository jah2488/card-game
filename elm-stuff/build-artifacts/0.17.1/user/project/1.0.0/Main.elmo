var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$svg$Svg$svg,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$svg$Svg_Attributes$viewBox('0 0 800 600'),
				_elm_lang$svg$Svg_Attributes$width('800px'),
				_elm_lang$svg$Svg_Attributes$height('600px')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$svg$Svg$circle,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$svg$Svg_Attributes$cx('50'),
						_elm_lang$svg$Svg_Attributes$cy('50'),
						_elm_lang$svg$Svg_Attributes$r('55'),
						_elm_lang$svg$Svg_Attributes$fill('#0B79CE')
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$svg$Svg$line,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$svg$Svg_Attributes$x1('50'),
						_elm_lang$svg$Svg_Attributes$y1('50'),
						_elm_lang$svg$Svg_Attributes$x2('10'),
						_elm_lang$svg$Svg_Attributes$y2('20'),
						_elm_lang$svg$Svg_Attributes$stroke('#023963')
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				_elm_lang$svg$Svg$text(
				_elm_lang$core$Basics$toString(model))
			]));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'PlayCard':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Tick':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$newPlayer = function (name) {
	return {
		name: name,
		maxHp: 50,
		hp: 50,
		wallet: 0,
		hand: _elm_lang$core$Native_List.fromArray(
			[]),
		deck: _elm_lang$core$Native_List.fromArray(
			[_user$project$Cards$b, _user$project$Cards$b, _user$project$Cards$b, _user$project$Cards$b]),
		graveyard: _elm_lang$core$Native_List.fromArray(
			[])
	};
};
var _user$project$Main$newBoard = F2(
	function (player1, player2) {
		return {
			cards: {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_List.fromArray(
					[]),
				_1: _elm_lang$core$Native_List.fromArray(
					[])
			}
		};
	});
var _user$project$Main$init = function () {
	var player2 = _user$project$Main$newPlayer('2');
	var player1 = _user$project$Main$newPlayer('1');
	return {
		ctor: '_Tuple2',
		_0: {
			turn: {ctor: '_Tuple2', _0: 0, _1: player1},
			board: A2(_user$project$Main$newBoard, player1, player2),
			playerOne: player1,
			playerTwo: player2
		},
		_1: _elm_lang$core$Platform_Cmd$none
	};
}();
var _user$project$Main$newCard = F4(
	function (name, str, hp, cost) {
		return {name: name, maxStr: str, str: str, maxHp: hp, hp: hp, cost: cost};
	});
var _user$project$Main$Game = F4(
	function (a, b, c, d) {
		return {turn: a, board: b, playerOne: c, playerTwo: d};
	});
var _user$project$Main$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Main$Tick);
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
var _user$project$Main$PlayCard = function (a) {
	return {ctor: 'PlayCard', _0: a};
};
var _user$project$Main$NoOp = {ctor: 'NoOp'};
